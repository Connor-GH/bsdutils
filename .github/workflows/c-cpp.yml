name: C/C++ CI

on:
    push:
        branches: [ master ]
        paths:
            - 'meson.build'
            - 'compat/**'
            - 'include/**'
            - 'src/**'
            - '.github/workflows/**'

    pull_request:
        branches: [ master ]
        paths:
            - 'meson.build'
            - 'compat/**'
            - 'include/**'
            - 'src/**'
            - '.github/workflows/**'

jobs:
    glibc:
        runs-on: ubuntu-latest

        steps:
            - name: dependencies
              run: |
                  sudo env DEBIAN_FRONTEND=noninteractive apt-get -y install meson ninja-build libedit-dev libacl1-dev curl

            - name: libxo
              run: |
                  VER="$(git ls-remote --tag https://github.com/Juniper/libxo | grep -E "\/[0-9\.]+$" | rev | cut -d '/' -f 1 | rev | sort -n | tail -n 1)"
                  curl -O https://github.com/Juniper/libxo/releases/download/${VER}/libxo-${VER}.tar.gz
                  tar -xf libxo-${VER}
                  cd libxo-${VER}
                  ./configure --prefix=/usr/local
                  make
                  make install

            - uses: actions/checkout@v2

            - name: build and check
              run: |
                  meson setup build --werror -Db_buildtype=debug
                  ninja -C build -v
                  meson test -C build -v

    musl:
        runs-on: ubuntu-latest

        container:
            image: "alpine:latest"

        steps:
            - name: dependencies
              run: |
                  apk add git libtool autoconf automake make gcc musl-dev g++ meson flex bison libedit-dev openssl-dev fts-dev acl-dev libxo-dev

            - name: rpmatch for musl
              run: |
                  git clone https://github.com/pullmoll/musl-rpmatch
                  cd musl-rpmatch
                  ./bootstrap.sh
                  ./configure --prefix=/usr/local
                  make
                  make install

            - uses: actions/checkout@v2

            - name: build and check
              run: |
                  meson setup build --werror -Db_buildtype=debug
                  ninja -C build -v
                  meson test -C build -v
