--- sleep.c.orig	2020-06-25 09:46:14.478015337 -0400
+++ sleep.c	2020-07-03 15:28:05.753450946 -0400
@@ -39,6 +39,9 @@
 #include <stdlib.h>
 #include <time.h>
 #include <unistd.h>
+#include <string.h>
+
+extern char *__progname;
 
 void alarmh(int);
 void usage(void);
@@ -51,9 +54,6 @@
 	char *cp;
 	int ch, i;
 
-	if (pledge("stdio", NULL) == -1)
-		err(1, "pledge");
-
 	signal(SIGALRM, alarmh);
 
 	while ((ch = getopt(argc, argv, "")) != -1) {
@@ -68,7 +68,7 @@
 	if (argc != 1)
 		usage();
 
-	timespecclear(&rqtp);
+	memset(&rqtp, 0, sizeof(rqtp));
 
 	/* Handle whole seconds. */
 	for (cp = argv[0]; *cp != '\0' && *cp != '.'; cp++) {
@@ -95,7 +95,7 @@
 		}
 	}
 
-	if (timespecisset(&rqtp)) {
+	if (rqtp.tv_sec || rqtp.tv_nsec) {
 		if (nanosleep(&rqtp, NULL) == -1)
 			err(1, "nanosleep");
 	}
@@ -106,7 +106,7 @@
 void
 usage(void)
 {
-	fprintf(stderr, "usage: %s seconds\n", getprogname());
+	fprintf(stderr, "usage: %s seconds\n", __progname);
 	exit(1);
 }
 
