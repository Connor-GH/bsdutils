--- coll.c.orig	2020-06-27 17:37:25.928824796 -0400
+++ coll.c	2020-06-29 12:09:47.006577525 -0400
@@ -34,7 +34,7 @@
 #include <langinfo.h>
 #include <limits.h>
 #include <math.h>
-#include <md5.h>
+#include <openssl/md5.h>
 #include <stdlib.h>
 #include <string.h>
 #include <wchar.h>
@@ -773,7 +773,7 @@
  */
 static int
 numcoll_impl(struct key_value *kv1, struct key_value *kv2,
-    size_t offset __unused, bool use_suffix)
+    size_t offset, bool use_suffix)
 {
 	struct bwstring *s1, *s2;
 	wchar_t sfrac1[MAX_NUM_SIZE + 1], sfrac2[MAX_NUM_SIZE + 1];
@@ -946,11 +946,15 @@
  */
 static int
 randomcoll(struct key_value *kv1, struct key_value *kv2,
-    size_t offset __unused)
+    size_t offset)
 {
 	struct bwstring *s1, *s2;
 	MD5_CTX ctx1, ctx2;
-	char *b1, *b2;
+	int l = (MD5_DIGEST_LENGTH * 2) + 1;
+	char b1[l], b2[l];
+
+	memset(b1, 0, sizeof(b1));
+	memset(b2, 0, sizeof(b2));
 
 	s1 = kv1->k;
 	s2 = kv2->k;
@@ -966,26 +970,22 @@
 	memcpy(&ctx1, &md5_ctx, sizeof(MD5_CTX));
 	memcpy(&ctx2, &md5_ctx, sizeof(MD5_CTX));
 
-	MD5Update(&ctx1, bwsrawdata(s1), bwsrawlen(s1));
-	MD5Update(&ctx2, bwsrawdata(s2), bwsrawlen(s2));
-	b1 = MD5End(&ctx1, NULL);
-	b2 = MD5End(&ctx2, NULL);
+	MD5_Update(&ctx1, bwsrawdata(s1), bwsrawlen(s1));
+	MD5_Update(&ctx2, bwsrawdata(s2), bwsrawlen(s2));
+	MD5_Final(b1, &ctx1);
+	MD5_Final(b2, &ctx2);
 	if (b1 == NULL) {
 		if (b2 == NULL)
 			return 0;
 		else {
-			sort_free(b2);
 			return -1;
 		}
 	} else if (b2 == NULL) {
-		sort_free(b1);
 		return 1;
 	} else {
 		int cmp_res;
 
 		cmp_res = strcmp(b1, b2);
-		sort_free(b1);
-		sort_free(b2);
 
 		if (!cmp_res)
 			cmp_res = bwscoll(s1, s2, 0);
@@ -999,7 +999,7 @@
  */
 static int
 versioncoll(struct key_value *kv1, struct key_value *kv2,
-    size_t offset __unused)
+    size_t offset)
 {
 	struct bwstring *s1, *s2;
 
@@ -1072,7 +1072,7 @@
  */
 static int
 gnumcoll(struct key_value *kv1, struct key_value *kv2,
-    size_t offset __unused)
+    size_t offset)
 {
 	double d1, d2;
 	int err1, err2;
@@ -1228,7 +1228,7 @@
  * Implements month sort (-M).
  */
 static int
-monthcoll(struct key_value *kv1, struct key_value *kv2, size_t offset __unused)
+monthcoll(struct key_value *kv1, struct key_value *kv2, size_t offset)
 {
 	int val1, val2;
 	bool key1_read, key2_read;
