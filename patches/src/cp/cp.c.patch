--- cp.c.orig	2020-06-25 09:46:14.408015180 -0400
+++ cp.c	2020-06-25 09:51:13.307686072 -0400
@@ -66,6 +66,8 @@
 
 #include "extern.h"
 
+#include "compat.h"
+
 #define	fts_dne(_x)	(_x->fts_pointer != NULL)
 
 PATH_T to = { to.p_path, "" };
@@ -135,14 +137,6 @@
 	argc -= optind;
 	argv += optind;
 
-	/*
-	 * Unfortunately, -R will use mkfifo & mknod;
-	 * -p will use fchown, fchmod, lchown, fchflags..
-	 */
-	if (Rflag == 0 && pflag == 0)
-		if (pledge("stdio rpath wpath cpath fattr", NULL) == -1)
-			err(1, "pledge");
-
 	if (argc < 2)
 		usage();
 
@@ -430,8 +424,10 @@
 				else if (vflag)
 					(void)fprintf(stdout, "%s -> %s\n",
 					    curr->fts_path, to.p_path);
-			} else if (!S_ISDIR(to_stat.st_mode))
-				errc(1, ENOTDIR, "%s", to.p_path);
+			} else if (!S_ISDIR(to_stat.st_mode)) {
+				errno = ENOTDIR;
+				err(1, "%s", to.p_path);
+			}
 			break;
 		case S_IFBLK:
 		case S_IFCHR:
@@ -461,7 +457,8 @@
 			cval = 0;
 			break;
 		case S_IFSOCK:
-			warnc(EOPNOTSUPP, "%s", curr->fts_path);
+			errno = EOPNOTSUPP;
+			warn("%s", curr->fts_path);
 			break;
 		default:
 			if ((cval = copy_file(curr, !fts_dne(curr))) == 1)
