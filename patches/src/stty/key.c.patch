--- stty/key.c.orig	2021-04-27 23:52:35.000000000 -0400
+++ stty/key.c	2021-06-30 09:50:00.446889340 -0400
@@ -27,6 +27,9 @@
  * SUCH DAMAGE.
  */
 
+/* necessary to get 'ttydefchars' */
+#define TTYDEFCHARS
+
 #ifndef lint
 #if 0
 static char sccsid[] = "@(#)key.c	8.3 (Berkeley) 4/2/94";
@@ -38,9 +41,12 @@ __FBSDID("$FreeBSD$");
 #include <sys/types.h>
 
 #include <err.h>
+#include <errno.h>
 #include <stdlib.h>
 #include <stdio.h>
+#include <unistd.h>
 #include <string.h>
+#include <termios.h>
 
 #include "stty.h"
 #include "extern.h"
@@ -191,13 +197,23 @@ f_everything(struct info *ip)
 void
 f_extproc(struct info *ip)
 {
+	struct termios tio;
+	errno = 0;
+
+	if (tcgetattr(ip->fd, &tio) == -1) {
+		err(1, "extproc");
+		return;
+	}
 
 	if (ip->off) {
-		int tmp = 0;
-		(void)ioctl(ip->fd, TIOCEXT, &tmp);
+		tio.c_lflag &= ~EXTPROC;
 	} else {
-		int tmp = 1;
-		(void)ioctl(ip->fd, TIOCEXT, &tmp);
+		tio.c_lflag |= EXTPROC;
+	}
+
+	if (tcsetattr(ip->fd, TCSANOW, &tio) == -1) {
+		err(1, "extproc");
+		return;
 	}
 }
 
@@ -258,11 +274,17 @@ f_sane(struct info *ip)
 {
 	struct termios def;
 
-	cfmakesane(&def);
+	def.c_cflag = TTYDEF_CFLAG;
+	def.c_iflag = TTYDEF_IFLAG;
+	def.c_lflag = TTYDEF_LFLAG;
+	def.c_oflag = TTYDEF_OFLAG;
+	def.c_ispeed = TTYDEF_SPEED;
+	def.c_ospeed = TTYDEF_SPEED;
+	memcpy(def.c_cc, ttydefchars, sizeof ttydefchars);
 	ip->t.c_cflag = def.c_cflag | (ip->t.c_cflag & CLOCAL);
 	ip->t.c_iflag = def.c_iflag;
 	/* preserve user-preference flags in lflag */
-#define	LKEEP	(ECHOKE|ECHOE|ECHOK|ECHOPRT|ECHOCTL|ALTWERASE|TOSTOP|NOFLSH)
+#define	LKEEP	(ECHOKE|ECHOE|ECHOK|ECHOPRT|ECHOCTL|VWERASE|TOSTOP|NOFLSH)
 	ip->t.c_lflag = def.c_lflag | (ip->t.c_lflag & LKEEP);
 	ip->t.c_oflag = def.c_oflag;
 	ip->set = 1;
@@ -287,7 +309,7 @@ f_tty(struct info *ip)
 {
 	int tmp;
 
-	tmp = TTYDISC;
+	tmp = N_TTY;
 	if (ioctl(ip->fd, TIOCSETD, &tmp) < 0)
 		err(1, "TIOCSETD");
 }
