--- xargs.c.orig	2020-10-20 12:54:34.119175466 -0400
+++ xargs.c	2020-10-20 17:40:00.846091996 -0400
@@ -51,6 +51,8 @@
 
 #include "pathnames.h"
 
+#include "compat.h"
+
 static void	parse_input(int, char *[]);
 static void	prerun(int, char *[]);
 static int	prompt(void);
@@ -100,9 +102,6 @@
 	if ((arg_max = sysconf(_SC_ARG_MAX)) == -1)
 		errx(1, "sysconf(_SC_ARG_MAX) failed");
 
-	if (pledge("stdio rpath proc exec", NULL) == -1)
-		err(1, "pledge");
-
 	nline = arg_max - 4 * 1024;
 	while (*ep != NULL) {
 		/* 1 byte for each '\0' */
@@ -584,7 +583,7 @@
 			if (WTERMSIG(status) != SIGPIPE) {
 				if (WTERMSIG(status) < NSIG)
 					warnx("%s terminated by SIG%s", name,
-					    sys_signame[WTERMSIG(status)]);
+					    strsignal(WTERMSIG(status)));
 				else
 					warnx("%s terminated by signal %d",
 					    name, WTERMSIG(status));
@@ -606,13 +605,14 @@
 	char *response;
 	FILE *ttyfp;
 	int doit = 0;
+	ssize_t r = 0;
 
 	if ((ttyfp = fopen(_PATH_TTY, "r")) == NULL)
 		return (2);	/* Indicate that the TTY failed to open. */
 	fprintf(stderr, "?...");
 	fflush(stderr);
-	response = fgetln(ttyfp, &rsize);
-	doit = response != NULL && (*response == 'y' || *response == 'Y');
+	r = getline(&response, &rsize, ttyfp);
+	doit = r != -1 && response != NULL && (*response == 'y' || *response == 'Y');
 	fclose(ttyfp);
 	return (doit);
 }
