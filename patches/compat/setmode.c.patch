--- compat/setmode.c.orig	2021-04-30 18:20:37.385687472 -0400
+++ compat/setmode.c	2021-05-04 09:45:48.005088741 -0400
@@ -36,10 +36,8 @@
 __SCCSID("@(#)setmode.c	8.2 (Berkeley) 3/25/94");
 __FBSDID("$FreeBSD$");
 
-#include "namespace.h"
 #include <sys/types.h>
 #include <sys/stat.h>
-#include <sys/sysctl.h>
 
 #include <ctype.h>
 #include <errno.h>
@@ -52,8 +50,6 @@
 #ifdef SETMODE_DEBUG
 #include <stdio.h>
 #endif
-#include "un-namespace.h"
-#include "libc_private.h"
 
 #define	SET_LEN	6		/* initial # of bitcmd struct to malloc */
 #define	SET_LEN_INCR 4		/* # of bitcmd structs to add as needed */
@@ -208,12 +204,12 @@
 		}
 		if (errno == ERANGE && (perml == LONG_MAX || perml == LONG_MIN))
 			goto out;
-		if (perml & ~(STANDARD_BITS|S_ISTXT)) {
+		if (perml & ~(STANDARD_BITS|S_ISVTX)) {
 			errno = EINVAL;
 			goto out;
 		}
 		perm = (mode_t)perml;
-		ADDCMD('=', (STANDARD_BITS|S_ISTXT), perm, mask);
+		ADDCMD('=', (STANDARD_BITS|S_ISVTX), perm, mask);
 		set->cmd = 0;
 		return (saveset);
 	}
@@ -251,7 +247,7 @@
 		if (op == '=')
 			equalopdone = 0;
 
-		who &= ~S_ISTXT;
+		who &= ~S_ISVTX;
 		for (perm = 0, permXbits = 0;; ++p) {
 			switch (*p) {
 			case 'r':
@@ -265,8 +261,8 @@
 			case 't':
 				/* If only "other" bits ignore sticky. */
 				if (!who || who & ~S_IRWXO) {
-					who |= S_ISTXT;
-					perm |= S_ISTXT;
+					who |= S_ISVTX;
+					perm |= S_ISVTX;
 				}
 				break;
 			case 'w':
@@ -346,9 +342,7 @@
 get_current_umask(void)
 {
 	sigset_t sigset, sigoset;
-	size_t len;
 	mode_t mask;
-	u_short smask;
 
 #ifdef KERN_PROC_UMASK
 	/*
@@ -366,9 +360,9 @@
 	 * handler, protect them as best we can.
 	 */
 	sigfillset(&sigset);
-	(void)__libc_sigprocmask(SIG_BLOCK, &sigset, &sigoset);
+	(void)sigprocmask(SIG_BLOCK, &sigset, &sigoset);
 	(void)umask(mask = umask(0));
-	(void)__libc_sigprocmask(SIG_SETMASK, &sigoset, NULL);
+	(void)sigprocmask(SIG_SETMASK, &sigoset, NULL);
 	return (mask);
 }
 
